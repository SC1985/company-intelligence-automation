name: Strategic Intelligence Diagnostic

on:
  workflow_dispatch:

jobs:
  diagnostic-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: üì° Checkout Repository
      uses: actions/checkout@v4
      
    - name: üêç Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: üîç Environment Diagnostic
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECIPIENT_EMAILS: ${{ secrets.RECIPIENT_EMAILS }}
      run: |
        echo "üîç Checking environment variables..."
        echo "SENDER_EMAIL: ${{ secrets.SENDER_EMAIL != '' && 'SET' || 'MISSING' }}"
        echo "SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD != '' && 'SET' || 'MISSING' }}"
        echo "RECIPIENT_EMAILS: ${{ secrets.RECIPIENT_EMAILS != '' && 'SET' || 'MISSING' }}"
    
    - name: üöÄ Execute Diagnostic Engine
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECIPIENT_EMAILS: ${{ secrets.RECIPIENT_EMAILS }}
        ADMIN_EMAILS: ${{ secrets.ADMIN_EMAILS }}
      run: |
        echo "üöÄ Starting diagnostic execution..."
        python src/main.py
        echo "‚úÖ Diagnostic execution complete"
    
    - name: üìä Upload Diagnostic Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: diagnostic-logs-${{ github.run_number }}
        path: |
          *.log
        retention-days: 7
    
    - name: üìã Show Log Contents
      if: always()
      run: |
        echo "üìã Diagnostic log contents:"
        if [ -f intelligence_system.log ]; then
          cat intelligence_system.log
        else
          echo "‚ùå No log file found"
        fi
